// Generated by view binder compiler. Do not edit!
package com.example.wellcharge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.Spinner;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.wellcharge.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SetTimePickerBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView HourTh;

  @NonNull
  public final TextView MinTh;

  @NonNull
  public final Button back;

  @NonNull
  public final TextView endTime;

  @NonNull
  public final TextView endTimeTxt;

  @NonNull
  public final Button setEndTime;

  @NonNull
  public final Button setStartTime;

  @NonNull
  public final Spinner spinnerHour;

  @NonNull
  public final Spinner spinnerMin;

  @NonNull
  public final TextView startTime;

  @NonNull
  public final TextView startTimeTxt;

  @NonNull
  public final Switch switch1;

  @NonNull
  public final TextView textView10;

  @NonNull
  public final TextView textView11;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView textView4;

  @NonNull
  public final TextView textView9;

  @NonNull
  public final TextView timeSeparate;

  private SetTimePickerBinding(@NonNull ConstraintLayout rootView, @NonNull TextView HourTh,
      @NonNull TextView MinTh, @NonNull Button back, @NonNull TextView endTime,
      @NonNull TextView endTimeTxt, @NonNull Button setEndTime, @NonNull Button setStartTime,
      @NonNull Spinner spinnerHour, @NonNull Spinner spinnerMin, @NonNull TextView startTime,
      @NonNull TextView startTimeTxt, @NonNull Switch switch1, @NonNull TextView textView10,
      @NonNull TextView textView11, @NonNull TextView textView3, @NonNull TextView textView4,
      @NonNull TextView textView9, @NonNull TextView timeSeparate) {
    this.rootView = rootView;
    this.HourTh = HourTh;
    this.MinTh = MinTh;
    this.back = back;
    this.endTime = endTime;
    this.endTimeTxt = endTimeTxt;
    this.setEndTime = setEndTime;
    this.setStartTime = setStartTime;
    this.spinnerHour = spinnerHour;
    this.spinnerMin = spinnerMin;
    this.startTime = startTime;
    this.startTimeTxt = startTimeTxt;
    this.switch1 = switch1;
    this.textView10 = textView10;
    this.textView11 = textView11;
    this.textView3 = textView3;
    this.textView4 = textView4;
    this.textView9 = textView9;
    this.timeSeparate = timeSeparate;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SetTimePickerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SetTimePickerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.set_time_picker, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SetTimePickerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.HourTh;
      TextView HourTh = ViewBindings.findChildViewById(rootView, id);
      if (HourTh == null) {
        break missingId;
      }

      id = R.id.MinTh;
      TextView MinTh = ViewBindings.findChildViewById(rootView, id);
      if (MinTh == null) {
        break missingId;
      }

      id = R.id.back;
      Button back = ViewBindings.findChildViewById(rootView, id);
      if (back == null) {
        break missingId;
      }

      id = R.id.endTime;
      TextView endTime = ViewBindings.findChildViewById(rootView, id);
      if (endTime == null) {
        break missingId;
      }

      id = R.id.endTimeTxt;
      TextView endTimeTxt = ViewBindings.findChildViewById(rootView, id);
      if (endTimeTxt == null) {
        break missingId;
      }

      id = R.id.setEndTime;
      Button setEndTime = ViewBindings.findChildViewById(rootView, id);
      if (setEndTime == null) {
        break missingId;
      }

      id = R.id.setStartTime;
      Button setStartTime = ViewBindings.findChildViewById(rootView, id);
      if (setStartTime == null) {
        break missingId;
      }

      id = R.id.spinnerHour;
      Spinner spinnerHour = ViewBindings.findChildViewById(rootView, id);
      if (spinnerHour == null) {
        break missingId;
      }

      id = R.id.spinnerMin;
      Spinner spinnerMin = ViewBindings.findChildViewById(rootView, id);
      if (spinnerMin == null) {
        break missingId;
      }

      id = R.id.startTime;
      TextView startTime = ViewBindings.findChildViewById(rootView, id);
      if (startTime == null) {
        break missingId;
      }

      id = R.id.startTimeTxt;
      TextView startTimeTxt = ViewBindings.findChildViewById(rootView, id);
      if (startTimeTxt == null) {
        break missingId;
      }

      id = R.id.switch1;
      Switch switch1 = ViewBindings.findChildViewById(rootView, id);
      if (switch1 == null) {
        break missingId;
      }

      id = R.id.textView10;
      TextView textView10 = ViewBindings.findChildViewById(rootView, id);
      if (textView10 == null) {
        break missingId;
      }

      id = R.id.textView11;
      TextView textView11 = ViewBindings.findChildViewById(rootView, id);
      if (textView11 == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      id = R.id.textView9;
      TextView textView9 = ViewBindings.findChildViewById(rootView, id);
      if (textView9 == null) {
        break missingId;
      }

      id = R.id.timeSeparate;
      TextView timeSeparate = ViewBindings.findChildViewById(rootView, id);
      if (timeSeparate == null) {
        break missingId;
      }

      return new SetTimePickerBinding((ConstraintLayout) rootView, HourTh, MinTh, back, endTime,
          endTimeTxt, setEndTime, setStartTime, spinnerHour, spinnerMin, startTime, startTimeTxt,
          switch1, textView10, textView11, textView3, textView4, textView9, timeSeparate);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
