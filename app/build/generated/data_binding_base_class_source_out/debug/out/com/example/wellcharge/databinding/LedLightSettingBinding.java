// Generated by view binder compiler. Do not edit!
package com.example.wellcharge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.wellcharge.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LedLightSettingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button backBtn;

  @NonNull
  public final Button ledMode1;

  @NonNull
  public final Button ledMode2;

  @NonNull
  public final Button ledMode3;

  @NonNull
  public final TextView textView27;

  private LedLightSettingBinding(@NonNull ConstraintLayout rootView, @NonNull Button backBtn,
      @NonNull Button ledMode1, @NonNull Button ledMode2, @NonNull Button ledMode3,
      @NonNull TextView textView27) {
    this.rootView = rootView;
    this.backBtn = backBtn;
    this.ledMode1 = ledMode1;
    this.ledMode2 = ledMode2;
    this.ledMode3 = ledMode3;
    this.textView27 = textView27;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LedLightSettingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LedLightSettingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.led_light_setting, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LedLightSettingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backBtn;
      Button backBtn = ViewBindings.findChildViewById(rootView, id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.ledMode1;
      Button ledMode1 = ViewBindings.findChildViewById(rootView, id);
      if (ledMode1 == null) {
        break missingId;
      }

      id = R.id.ledMode2;
      Button ledMode2 = ViewBindings.findChildViewById(rootView, id);
      if (ledMode2 == null) {
        break missingId;
      }

      id = R.id.ledMode3;
      Button ledMode3 = ViewBindings.findChildViewById(rootView, id);
      if (ledMode3 == null) {
        break missingId;
      }

      id = R.id.textView27;
      TextView textView27 = ViewBindings.findChildViewById(rootView, id);
      if (textView27 == null) {
        break missingId;
      }

      return new LedLightSettingBinding((ConstraintLayout) rootView, backBtn, ledMode1, ledMode2,
          ledMode3, textView27);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
